#!/bin/bash
# The script cleans SRv6Router node

echo -e "\n"
echo "############################################################"
echo "##                 SRv6 Router node setup                 ##"
echo "##                                                        ##"
echo "##    The installation process can last many minutes.     ##"
echo "##   Plase wait and do not interrupt the setup process.   ##"
echo "############################################################"

# Reset tunnels
if [ $(ip link show | grep tap | wc -l) -gt 0 ]; then
	echo -e "\n-Turning off tap interfaces"
	declare -a tap
	counter=1
	endofcounter=$(($(ip link show | grep tap | wc -l) + 1))
	while [ $counter -lt $endofcounter ]; do
			arraycounter=$(($counter-1))
			tap[$arraycounter]=$(ip link show | grep tap | sed -n "$counter p" | awk '{split($0,a," "); print a[2]}' | awk '{split($0,a,":"); print a[1]}')
			let counter=counter+1
	done
	for (( i=0; i<${#tap[@]}; i++ )); do
		ip link set ${tap[$i]} down
		ip link del ${tap[$i]}
	done
fi
if [ $(ps aux | grep openvpn | wc -l) -gt 1 ]; then
	echo -e "\n-Turning off OpenVPN service"
	pkill openvpn
fi
echo -e "\n-Removing configuration files"
rm /etc/openvpn/*.conf 2> /dev/null
rm /etc/openvpn/*.sh 2> /dev/null

# Reset of Quagga
if [ $(ps aux | grep quagga | wc -l) -gt 1 ]
  then
	echo -e "\n-Turning off Quagga service"
	/etc/init.d/quagga stop
fi
echo -e "\n-Reset of zebra.conf file"
cp /usr/share/doc/quagga/examples/zebra.conf.sample /etc/quagga/zebra.conf
echo -e "\n-Reset of ospfd.conf file"
cp /usr/share/doc/quagga/examples/ospfd.conf.sample /etc/quagga/ospfd.conf
echo -e "\n-Reset of quagga daemons file"
sed -i -e 's/zebra=yes/zebra=no/g' /etc/quagga/daemons &&
sed -i -e 's/ospfd=yes/ospfd=no/g' /etc/quagga/daemons &&
sed -i '/babeld=no/d' /etc/quagga/daemons &&
echo -e "\n-Reset of debian.conf file"
sed -i -e 's/zebra_options=" --daemon"/zebra_options=" --daemon -A 127.0.0.1"/g' /etc/quagga/debian.conf &&
sed -i -e 's/babeld_options=" --daemon -A 127.0.0.1"//g' /etc/quagga/debian.conf &&
sed -i -e 's/# The list of daemons to watch is automatically generated by the init script.//g' /etc/quagga/debian.conf &&
sed -i -e 's/watchquagga_enable=no//g' /etc/quagga/debian.conf &&
sed -i -e 's/watchquagga_options="--daemon"//g' /etc/quagga/debian.conf &&
sed -i -e '/^$/d' /etc/quagga/debian.conf &&
if [ -f /etc/quagga/vtysh.conf ]; then
    rm /etc/quagga/vtysh.conf
fi
echo -e "\n-Disabling Linux forwarding"
echo "0" > /proc/sys/net/ipv4/ip_forward &&
sed -i -e 's/net.ipv4.ip_forward = 1//g' /etc/sysctl.conf &&
sed -i -e '/^$/d' /etc/sysctl.conf &&

# ENABLE LINUX RPF
echo -e "\n-Enabling Linux RPF"
sysctl -w "net.ipv4.conf.all.rp_filter=1" &&

# Reset static routes
declare -a remoteaddr
declare -a interfaces
counter=1
endofcounter=$(($(route -n | grep UH | wc -l) + 1))
while [ $counter -lt $endofcounter ]; do
        arraycounter=$(($counter-1))
        interfaces[$arraycounter]=$(route -n | grep UH | sed -n "$counter p" | awk '{split($0,a," "); print a[8]}')
        remoteaddr[$arraycounter]=$(route -n | grep UH | sed -n "$counter p" | awk '{split($0,a," "); print a[1]}')
		let counter=counter+1
done

echo -e "\n-Removing static routes"
for (( i=0; i<${#interfaces[@]}; i++ )); do
	route del -host ${remoteaddr[$i]} dev ${interfaces[$i]}
done
unset interfaces

# Deactivating unuseful interfaces (except management interface eth0) with ip link set ethX down
unset interfaces
declare -a interfaces
counter=1
endofcounter=$(($(ip link show | grep -e "eth[^0e]" | wc -l) + 1))
while [ $counter -lt $endofcounter ]; do
        arraycounter=$(($counter-1))
        interfaces[$arraycounter]=$(ip link show | grep -e "eth[^0e]" | sed -n "$counter p" | awk '{split($0,a," "); print a[2]}' | awk '{split($0,a,"@"); print a[1]}')
        let counter=counter+1
done
echo -e "\n-Deactivating physical interfaces"
for (( i=0; i<${#interfaces[@]}; i++ )); do
	ip link set ${interfaces[$i]} down
	tc qdisc del dev ${interfaces[$i]} root
done

echo -e "\n-Removing loopback address"
ip addr del $(ip a | grep "scope global lo" | awk '{split($0,a," "); print a[2]}') dev lo &&

echo -e "\n-Restarting network services"
/etc/init.d/networking restart &&

echo -e "\nSRv6 Router node clean ended succesfully. Enjoy!\n"

EXIT_SUCCESS=0
exit $EXIT_SUCCESS
